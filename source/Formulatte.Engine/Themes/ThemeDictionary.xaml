<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:ui="http://schemas.inkore.net/lib/ui/wpf/modern">
    <ResourceDictionary.MergedDictionaries>
        
        <ui:ThemeResources CanBeAccessedAcrossThreads="False">
            <ui:ThemeResources.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <!--<StaticResource x:Key="NavigationViewContentBackground" ResourceKey="LayerFillColorDefaultBrush" />-->
                    <SolidColorBrush x:Key="NavigationViewExpandedPaneBackground" Color="Transparent" />
                    <SolidColorBrush x:Key="NavigationViewExpandedPaneBackgroundA" Color="#FFEDEDED" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <!--<StaticResource x:Key="NavigationViewContentBackground" ResourceKey="LayerFillColorDefaultBrush" />-->
                    <SolidColorBrush x:Key="NavigationViewExpandedPaneBackground" Color="Transparent" />
                    <SolidColorBrush x:Key="NavigationViewExpandedPaneBackgroundA" Color="#FF202020" />
                </ResourceDictionary>
            </ui:ThemeResources.ThemeDictionaries>
        </ui:ThemeResources>

        <ui:XamlControlsResources />

    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ui:AppBarButton">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Label}"/>
        <Style.Triggers>
            <Trigger Property="LabelPosition" Value="Collapsed">
                <Setter Property="Width" Value="42"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ui:AppBarToggleButton">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Label}"/>
        <Style.Triggers>
            <Trigger Property="LabelPosition" Value="Collapsed">
                <Setter Property="Width" Value="42"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ui:AppBarElementContainer">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ui:ThemeKeys.DefaultButtonStyleKey}}">
        <!--<Setter Property="Background" Value="#FFE9E9E9"/>-->
        <!--<Setter Property="BorderThickness" Value="1"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="BorderThickness" Value="0.5 0 0.5 0"/>
        <Setter Property="ui:ControlHelper.CornerRadius" Value="0"/>
        
    </Style>

    <Style x:Key="ToolbarImageStyle" TargetType="Image">
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="MathToolBarButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ui:ThemeKeys.DefaultButtonStyleKey}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>-->
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="LightGray"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF5DCAB9"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Border" Value="#FFC4D5DA"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF5479C2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF6C9BAF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>


</ResourceDictionary>